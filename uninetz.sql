CREATE TABLE UNIVERSITY (
	ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	NAME VARCHAR(256) NOT NULL,
	COUNTRY VARCHAR(256) NOT NULL,
	STATE VARCHAR(256) NOT NULL,
	CITY VARCHAR(256) NOT NULL,
	PRIMARY KEY (ID)
) ORGANIZE BY ROW;

CREATE TABLE PROFESSOR (
	ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	NAME VARCHAR(256) NOT NULL,
	UNIVERSITY_ID INT NOT NULL,
	FOREIGN KEY (UNIVERSITY_ID) REFERENCES UNIVERSITY(ID),
	PRIMARY KEY (ID)
) ORGANIZE BY ROW;

CREATE TABLE COURSE (
	ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	NAME VARCHAR(256) NOT NULL,
	YEAR CHAR(4) NOT NULL,
	DESCRIPTION CLOB,
	PROJECTS_START_DATE DATE NOT NULL,
	PROJECTS_END_DATE DATE NOT NULL,
	UNIVERSITY_ID INT NOT NULL,
	PROFESSOR_ID INT NOT NULL,
	FOREIGN KEY (UNIVERSITY_ID) REFERENCES UNIVERSITY(ID),
	FOREIGN KEY (PROFESSOR_ID) REFERENCES PROFESSOR(ID),
	PRIMARY KEY (ID)
) ORGANIZE BY ROW;

CREATE TABLE PROJECT (
	ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	TITLE VARCHAR(256) NOT NULL,
	SUMMARY CLOB,
	DETAILS CLOB,
	BLOG_URL VARCHAR(256),
	COURSE_ID INT NOT NULL,
	FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID),
	PRIMARY KEY (ID)
) ORGANIZE BY ROW;

CREATE TABLE COMPANY (
	ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	NAME VARCHAR(256) NOT NULL,
	URL VARCHAR(256),
	LOGO_URL VARCHAR(256),
	PRIMARY KEY (ID)
) ORGANIZE BY ROW;


CREATE TABLE SKILL (
	ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	NAME VARCHAR(256) NOT NULL,
	CATEGORY VARCHAR(256) NOT NULL,
	PRIMARY KEY (ID)
) ORGANIZE BY ROW;

CREATE TABLE STUDENT (
	ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	NAME VARCHAR(256) NOT NULL,
	DOB DATE NOT NULL,
	LINKEDIN_URL VARCHAR(256),
	GITHUB_URL VARCHAR(256),
	STACKOVERFLOW_URL VARCHAR(256),
	START_DATE DATE NOT NULL,
	UNIVERSITY_ID INT NOT NULL,
	FOREIGN KEY (UNIVERSITY_ID) REFERENCES UNIVERSITY(ID),
	PRIMARY KEY (ID)
) ORGANIZE BY ROW;

CREATE TABLE STUDENT_SKILL (
	RATING INT NOT NULL,
	STUDENT_ID INT NOT NULL,
	SKILL_ID INT NOT NULL,
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
	FOREIGN KEY (SKILL_ID) REFERENCES SKILL(ID)
) ORGANIZE BY ROW;

CREATE TABLE COURSE_SKILL (
	STUDENT_ID INT NOT NULL,
	SKILL_ID INT NOT NULL,
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
	FOREIGN KEY (SKILL_ID) REFERENCES SKILL(ID)
) ORGANIZE BY ROW;

CREATE TABLE COMPANY_SKILL (
	COMPANY_ID INT NOT NULL,
	SKILL_ID INT NOT NULL,
	FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID),
	FOREIGN KEY (SKILL_ID) REFERENCES SKILL(ID)
) ORGANIZE BY ROW;

CREATE TABLE PROJECT_SKILL (
	PROJECT_ID INT NOT NULL,
	SKILL_ID INT NOT NULL,
	FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(ID),
	FOREIGN KEY (SKILL_ID) REFERENCES SKILL(ID)
) ORGANIZE BY ROW;

CREATE TABLE STUDENT_COURSE (
	STUDENT_ID INT NOT NULL,
	COURSE_ID INT NOT NULL,
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
	FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID)
) ORGANIZE BY ROW;

CREATE TABLE STUDENT_PROJECT (
	STUDENT_ID INT NOT NULL,
	PROJECT_ID INT NOT NULL,
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
	FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(ID)
) ORGANIZE BY ROW;

CREATE TABLE COMPANY_PROJECT (
	ACCEPTED SMALLINT,
	COMPANY_ID INT NOT NULL,
	PROJECT_ID INT NOT NULL,
	FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID),
	FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(ID)
) ORGANIZE BY ROW;